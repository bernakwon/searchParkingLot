buildscript {
	ext {
		springBootVersion = '2.1.5.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("com.moowork.gradle:gradle-node-plugin:0.12")
	}
}

plugins {
	id 'java'
	id 'idea'
	id 'org.springframework.boot' version '2.1.5.RELEASE'
	id 'io.spring.dependency-management' version '1.0.6.RELEASE'
	id 'com.moowork.node' version '0.12'
}
group = 'com.search.parkinglot'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}


dependencies {


	compile('org.springframework.boot:spring-boot-starter-thymeleaf')

	compile ('io.springfox:springfox-swagger2:2.6.1')
	compile ('io.springfox:springfox-swagger-ui:2.6.1')

	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.boot:spring-boot-starter-cache')

	compile('org.projectlombok:lombok')



	compile('org.springframework.boot:spring-boot-starter-webflux')
	compile('org.projectreactor:reactor-spring:1.0.1.RELEASE')


	compile('org.codehaus.jackson:jackson-mapper-asl:1.9.13')

	compile('com.googlecode.json-simple:json-simple:1.1')

	compile('com.github.ben-manes.caffeine:caffeine')

	// Chinese Calendar
	compile('com.ibm.icu:icu4j:62.1')

	runtime('org.springframework.boot:spring-boot-devtools')

	testCompile('org.springframework.boot:spring-boot-starter-test')

	testCompile('io.projectreactor:reactor-test')

	testImplementation("org.junit.jupiter:junit-jupiter-api:5.6.0"){
		exclude module:'junit-platform-commons'
	}
	testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:5.6.0")

}

test {
	useJUnitPlatform()
}

node{
	//node.js가 설치되지 않은 환경에서는 true로 변경하고 build
	download=false
}


task appNpmInstall(type: NpmTask) {
	workingDir = file("${project.projectDir}/frontend")
	args = ["install"]
}

task appNpmBuild(type: NpmTask) {
	workingDir = file("${project.projectDir}/frontend")
	args = ["run","build"]
}

compileJava.dependsOn(appNpmInstall)

appNpmInstall.dependsOn(appNpmBuild)
